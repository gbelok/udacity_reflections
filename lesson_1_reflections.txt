How did viewing a diff between two versions of a file help you see the bug that was introduced?
By using the command diff between two versions, I was able to see the lines that were removed from one version and inserted in the other. In this way, those lines were isolated and brought into focus where it was easy to determine the bug that was introduced.
How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
Having the entire history of a file would allow you to trace back any mistakes you made and recall them so you will less likely make those again in the future and program faster and therefore more efficiently
What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

When versions are automatically saved, they can be too small to reflect a logical change and then you are faced with too many saved versions to give you any meaning to the changes you make. The con would be that too many versions remove the meaning to an individual commit. The pro would be that you can trace back any changes that were made.
Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
Google Docs tracks more changes in an individual file.
How might using version control make you more confident to make changes that could break something?
I would feel more confident because I know if I create a bug I can always go back to the previous version before the bug was introduced. All my versions are saved and available in case of any code break.
How Do You Want to Use Git?
I want to be able to track and save changes to my code and other documents with git and keep those files on github so they are all centralized and tracked.
